env:
  branch: ${{ github.head_ref || github.ref_name }}
  SERVER_REPO: ${{ secrets.DOCKER_HUB_USERNAME }}/chainlink-server

name: 🧱 Staging CI/CD Pipeline
on: 
  pull_request:
    paths:
    - 'server/**'
    - 'client/**'
    - 'kube/**'
    branches:
    - main
    - 'releases/**'
# All jobs run on different VM's, so we do have to repeat some things here.
jobs:
  Build_Server:
    name: 🏢 Build & Push Server Image
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2.4.2

      - name: Setup Docker Buildx action
        id: buildx
        uses: docker/setup-buildx-action@v1.7.0
        with:
          version: latest
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_KEY }}

      - name: Build and Push Server
        id: docker_build_server
        uses: docker/build-push-action@v2
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/chainlink-server:${{ runner.os }}-${{ github.run_number }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/chainlink-server:${{ runner.os }}-${{ github.sha }}
          secrets: GIT_AUTH_TOKEN=${{ github.token }}
  Build_Client:
    name: 💄 Build & Push Client Image
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2.4.2

      - name: Setup Docker Buildx action
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
      
      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_KEY }}

      - name: Build and Push client
        id: docker_build_client
        uses: docker/build-push-action@v3
        env:
          REACT_APP_BACKEND_URL: server
        with:
          context: ./client
          file: ./client/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/chainlink-client:${{ runner.os }}-${{ github.run_number }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/chainlink-client:${{ runner.os }}-${{ github.sha }}
          secrets: GIT_AUTH_TOKEN=${{ github.token }}
  Deploy_App:
    name: 🚀 (NON-FUNCTIONAL) Deploy to Staging
    runs-on: ubuntu-20.04
    needs: [ Build_Server, Build_Client ]
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2.4.2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Get PR Number
        id: get_pr_number
        run: |
          export PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          echo "PR_NUMBER=${PR_NUMBER}" >> $GITHUB_ENV

      - name: Run Deploy Script
        id: deploy_app
        env:
          IMAGE_REPO_SERVER: ${{ secrets.DOCKER_HUB_USERNAME }}/chainlink-server
          IMAGE_REPO_CLIENT: ${{ secrets.DOCKER_HUB_USERNAME }}/chainlink-client
          IMAGE_TAG: ${{ runner.os }}-${{ github.sha }}
          DEPLOY_RELEASE: chainlink-pr${{ env.PR_NUMBER }}
          ENV: staging
          APP: chainlink
          RDS_ENDPOINT: ${{ secrets.RDS_ENDPOINT }}
          RDS_PW: ${{ secrets.RDS_PW }}
          RDS_UN: ${{ secrets.RDS_UN }}
          ELASTICACHE_ENDPOINT: ${{ secrets.ELASTICACHE_ENDPOINT }}
          REACT_BACKEND_URL: server
        run: |
          sh .github/scripts/deploy.sh
