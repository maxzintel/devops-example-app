env:
  branch: ${{ github.head_ref || github.ref_name }} 

name: üß± CI/CD Pipeline
on: 
  push:
    paths:
    - 'server/**'
    - 'client/**'
    - 'kube/**'
    branches:
    - main
  # Remove blow for prod pipeline, remove above for staging pipeline.
  pull_request:
    paths:
    - 'server/**'
    - 'client/**'
    - 'kube/**'
    branches:
    - main
    - 'releases/**'
# All jobs run on different VM's, so we do have to repeat some things here.
jobs:
  Build_Server:
    name: üè¢ Build & Push Server Image
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2.4.2

      - name: Setup Docker Buildx action
        id: buildx
        uses: docker/setup-buildx-action@v1.7.0
        with:
          version: latest
      
      - name: Docker cache layers   
        id: docker-cache-layers                           
        uses: actions/cache@v2                                 
        with:                                                  
          path: /tmp/.buildx-cache                             
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |                                      
            ${{ runner.os }}-single-buildx 
      
      - name: Login to ECR
        id: login-ecr
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_ACCESS_KEY }}
          registry: ${{ secrets.AWS_ECR_SERVER }}

      - name: Build and Push Server
        id: docker_build_server
        env:              
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}                                                       
          RELEASE_IMAGE: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.RELEASE_REVISION }}
        run: |
          docker buildx create --use

          docker buildx build \                                
            --cache-from=type=local,src=/tmp/.buildx-cache \   
            --cache-to=type=local,dest=/tmp/.buildx-cache-new \
            --tag ${{ env.RELEASE_IMAGE }} \                           
            --target release \                                 
            --push \                                           
            .                                                  

          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  # Deploy_Server:
  #   name: üöÄ Deploy Server to Production
  #   runs-on: ubuntu-20.04
  #   needs: Build_Server
  #   steps:
  #     - name: Checkout
  #       id: checkout
  #       uses: actions/checkout@v2.4.2

  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
  #         aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-region: us-east-1

