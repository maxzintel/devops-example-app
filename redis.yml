env:
  branch: ${{ github.head_ref || github.ref_name }} 

name: üèóÔ∏è Pipeline Setup - Checkout Repo & Login to ECR
on: 
  push:
    paths:
    - 'client/**'
    - 'server/**'
    - 'redis/**'
    branches:
    - main
  pull_request:
    paths:
    - 'client/**'
    - 'server/**'
    - 'redis/**'
    branches:
    - main
    - 'releases/**'
# All jobs run on different VM's, so we do have to repeat some things here.
jobs:
  Server:
    runs-on: ubuntu-20.04
    steps:
      - name: Setup Repository
        id: setup_server
        uses: ./.github/workflows/setup.yml

      - name: Build and Push Server
        id: docker_build_server
        uses: docker/build-push-action@v3
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: |
            ${{ secrets.AWS_ECR_URL }}/chainlink-server:latest
            ${{ secrets.AWS_ECR_URL }}/chainlink-server:${{ runner.os }}-${{ github.run_number }}
          secrets: GIT_AUTH_TOKEN=${{ github.token }}
  Client:
    runs-on: ubuntu-20.04
    needs: Setup
    steps:
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./client
          file: ./client/Dockerfile
          push: true
          tags: |
            ${{ secrets.AWS_ECR_URL }}/chainlink-client:latest
            ${{ secrets.AWS_ECR_URL }}/chainlink-client:${{ runner.os }}-${{ github.run_number }}
          secrets: GIT_AUTH_TOKEN=${{ github.token }}
  Redis:
    runs-on: ubuntu-20.04
    needs: Setup
    steps:
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./redis
          file: ./redis/Dockerfile
          push: true
          tags: |
            ${{ secrets.AWS_ECR_URL }}/chainlink-redis:latest
            ${{ secrets.AWS_ECR_URL }}/chainlink-redis:${{ runner.os }}-${{ github.run_number }}
          secrets: GIT_AUTH_TOKEN=${{ github.token }}